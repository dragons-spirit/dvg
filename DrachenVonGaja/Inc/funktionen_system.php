<?php/* ermittelt den aktuellen Browser des Nutzers und gibt den Browsernamen zur端ck   -> Behandlung browserspezifischer Eigenheiten */function get_browser_name($user_agent){	if (strpos($user_agent, 'Opera') || strpos($user_agent, 'OPR/')) return 'Opera';	elseif (strpos($user_agent, 'Edge')) return 'Edge';	elseif (strpos($user_agent, 'Chrome')) return 'Chrome';	elseif (strpos($user_agent, 'Safari')) return 'Safari';	elseif (strpos($user_agent, 'Firefox')) return 'Firefox';	elseif (strpos($user_agent, 'MSIE') || strpos($user_agent, 'Trident/7')) return 'Internet Explorer';	return 'Other';}/* Strukturierte Ausgabe von Arrays f端r Testzwecke */function ausgabe_array($feld, $dim = 1){	foreach ($feld as $element)	{		if ($dim == 1){			echo "[".$element."]";		} else {			echo "[";			ausgabe_array($element, $dim - 1);			echo "]<br>";		}	}}?><script>	window.onerror = Fehlerbehandlung;    function Fehlerbehandlung (Nachricht, Datei, Zeile) {      Fehler = "Fehlermeldung:\n" + Nachricht + "\n" + Datei + "\n" + Zeile;      zeigeFehler();      return true;    }    function zeigeFehler () {      alert(Fehler);    }	function weiteresElement(element)	{		const adminForm = document.querySelector('#dvg_admin');		var letztesElement = null;		var i = 0;		while (temp = document.querySelector('#' + element + '_' + i)){			letztesElement = temp;			i = i+1;		}		const element_nr = Number(letztesElement.id.split("_").pop());		const element_nr_neu = element_nr + 1;		var element_neu = letztesElement.cloneNode(true);		element_neu.id = element + '_' + element_nr_neu;		switch (element){			case "npc_gebiet_neu":				element_neu.childNodes[1].childNodes[1].id = 'npc_gebiet_auswahl_'+element_nr_neu;				element_neu.childNodes[1].childNodes[1].name = 'npc_gebiet_auswahl_'+element_nr_neu;				element_neu.childNodes[3].childNodes[1].id = 'npc_gebiet_wkt_'+element_nr_neu;				element_neu.childNodes[3].childNodes[1].name = 'npc_gebiet_wkt_'+element_nr_neu;				break;			case "npc_item_neu":				element_neu.childNodes[1].childNodes[1].id = 'npc_item_auswahl_'+element_nr_neu;				element_neu.childNodes[1].childNodes[1].name = 'npc_item_auswahl_'+element_nr_neu;				element_neu.childNodes[3].childNodes[1].id = 'npc_item_wkt_'+element_nr_neu;				element_neu.childNodes[3].childNodes[1].name = 'npc_item_wkt_'+element_nr_neu;				element_neu.childNodes[5].childNodes[1].id = 'npc_item_min_'+element_nr_neu;				element_neu.childNodes[5].childNodes[1].name = 'npc_item_min_'+element_nr_neu;				element_neu.childNodes[7].childNodes[1].id = 'npc_item_max_'+element_nr_neu;				element_neu.childNodes[7].childNodes[1].name = 'npc_item_max_'+element_nr_neu;				break;			case "anderes_element":				/* Unterelemente vom kopierten Knoten nach Bedarf 端berarbeiten, z.B. f端r die Datenweitergabe an die POST-Variable (Durchnummerierung)*/				break;			default:				/* do nothing; */				break;		}		letztesElement.parentNode.insertBefore(element_neu, letztesElement.nextSibling);	}		</script>